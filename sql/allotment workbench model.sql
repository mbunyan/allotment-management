-- MySQL Script generated by MySQL Workbench
-- Tue Nov 14 10:38:59 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema allotmentdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema allotmentdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `allotmentdb` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ;
USE `allotmentdb` ;

-- -----------------------------------------------------
-- Table `allotmentdb`.`reference_table`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`reference_table` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`reference_table` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `some_title` VARCHAR(50) NOT NULL,
  `some_date` DATE NULL DEFAULT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `update_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NULL DEFAULT 0 COMMENT 'hides data = 1, retains data in table',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `allotmentdb`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`customer` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`customer` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(20) NOT NULL,
  `first_name` VARCHAR(50) NOT NULL,
  `middle_name` VARCHAR(50) NULL DEFAULT NULL COMMENT 'Initials or name',
  `last_name` VARCHAR(60) NOT NULL,
  `suffix` VARCHAR(20) NULL DEFAULT NULL,
  `salutation` VARCHAR(100) NOT NULL COMMENT 'Correspondence salutation',
  `municipal_resident` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `birthday` DATE NULL DEFAULT NULL,
  `registered_date` DATE NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `update_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NULL DEFAULT 0 COMMENT 'hides data = 1, retains data in table',
  `change_reason` VARCHAR(200) NOT NULL DEFAULT 'new',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `allotmentdb`.`plot_structure`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`plot_structure` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`plot_structure` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `plot_id` INT UNSIGNED NOT NULL,
  `type` VARCHAR(60) NOT NULL COMMENT 'Shed, greenhouse or something else',
  `installed` DATE NOT NULL,
  `removed` DATE NULL DEFAULT NULL,
  `description` VARCHAR(200) NULL DEFAULT NULL COMMENT 'size and materials',
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_plot_structure_plot`
    FOREIGN KEY (`plot_id`)
    REFERENCES `allotmentdb`.`plot` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_plot_structure_plot` ON `allotmentdb`.`plot_structure` (`plot_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`contact_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`contact_type` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`contact_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `contact_type` VARCHAR(60) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `allotmentdb`.`plot_customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`plot_customer` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`plot_customer` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customer_id` INT UNSIGNED NOT NULL,
  `plot_id` INT NOT NULL,
  `date_rented_from` DATE NOT NULL,
  `date_surrendered` DATE NULL DEFAULT NULL,
  `reason_surrendered` VARCHAR(100) NULL DEFAULT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_plot_customer_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `allotmentdb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_plot_customer_plot`
    FOREIGN KEY (`plot_id`)
    REFERENCES `allotmentdb`.`plot` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_plot_customer_customer` ON `allotmentdb`.`plot_customer` (`customer_id` ASC);

CREATE INDEX `fk_plot_customer_plot` ON `allotmentdb`.`plot_customer` (`plot_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`plot_picture`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`plot_picture` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`plot_picture` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `plot_id` INT UNSIGNED NOT NULL,
  `image_path` VARCHAR(250) NOT NULL,
  `exif_date` DATETIME NULL DEFAULT ON UPDATE CURRENT_TIMESTAMP COMMENT 'Extracted from EXIF image data, if available',
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_plot_picture_plot`
    FOREIGN KEY (`plot_id`)
    REFERENCES `allotmentdb`.`plot` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_plot_picture_plot` ON `allotmentdb`.`plot_picture` (`plot_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`customer_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`customer_address` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`customer_address` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customer_id` INT UNSIGNED NOT NULL,
  `invoice_address` TINYINT(1) UNSIGNED NULL DEFAULT 0,
  `address_type_code` VARCHAR(45) NULL,
  `line_1` VARCHAR(100) NOT NULL,
  `line_2` VARCHAR(100) NULL DEFAULT NULL,
  `town_city` VARCHAR(100) NOT NULL,
  `county` VARCHAR(60) NULL,
  `country` VARCHAR(100) NOT NULL,
  `postcode_zip` VARCHAR(15) NOT NULL,
  `date_address_from` DATE NOT NULL,
  `date_address_to` DATE NULL DEFAULT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `change_reason` VARCHAR(200) NOT NULL DEFAULT 'new',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customer_address_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `allotmentdb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_customer_address_customer` ON `allotmentdb`.`customer_address` (`customer_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`allotment_owner`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`allotment_owner` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`allotment_owner` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `public_authority` INT(1) UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Check if public or municipal authority',
  `title` VARCHAR(100) NOT NULL,
  `department` VARCHAR(100) NULL DEFAULT NULL,
  `line_1` VARCHAR(100) NOT NULL,
  `line_2` VARCHAR(100) NULL DEFAULT NULL,
  `town_city` VARCHAR(100) NOT NULL,
  `postcode_zip` VARCHAR(15) NOT NULL,
  `country` VARCHAR(100) NOT NULL,
  `phone` VARCHAR(25) NULL DEFAULT NULL COMMENT 'Main contact phone number',
  `email` VARCHAR(150) NULL DEFAULT NULL COMMENT 'Main contact email address',
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `allotmentdb`.`allotment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`allotment` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`allotment` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `allotment_owner_id` INT UNSIGNED NOT NULL,
  `title` VARCHAR(150) NOT NULL,
  `line_1` VARCHAR(100) NOT NULL,
  `line_2` VARCHAR(100) NULL DEFAULT NULL,
  `town_city` VARCHAR(100) NOT NULL,
  `postcode_zip` VARCHAR(15) NOT NULL,
  `country` VARCHAR(100) NOT NULL,
  `latitude` DOUBLE(10,6) UNSIGNED NULL DEFAULT NULL COMMENT 'Central point or main gate',
  `longitude` DOUBLE(10,6) UNSIGNED NULL DEFAULT NULL COMMENT 'Central point or main gate',
  `self_managed` INT(1) UNSIGNED NOT NULL DEFAULT 0,
  `open_closed` INT(1) UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Allotment open for use',
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_allotment_allotment_owner`
    FOREIGN KEY (`allotment_owner_id`)
    REFERENCES `allotmentdb`.`allotment_owner` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_allotment_allotment_owner` ON `allotmentdb`.`allotment` (`allotment_owner_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`allotment_manager`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`allotment_manager` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`allotment_manager` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `allotment_id` INT UNSIGNED NOT NULL,
  `title` VARCHAR(20) NOT NULL,
  `first_name` VARCHAR(60) NOT NULL,
  `last_name` VARCHAR(60) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_allotment_manager_allotment`
    FOREIGN KEY (`allotment_id`)
    REFERENCES `allotmentdb`.`allotment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_allotment_manager_allotment` ON `allotmentdb`.`allotment_manager` (`allotment_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`allotment_manager_contact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`allotment_manager_contact` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`allotment_manager_contact` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `allotment_manager_id` INT UNSIGNED NOT NULL,
  `contact_type` VARCHAR(50) NOT NULL,
  `detail` VARCHAR(150) NOT NULL,
  `date_contact_from` DATE NOT NULL,
  `date_contact_to` DATE NULL DEFAULT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_allotment_manager_contact`
    FOREIGN KEY (`allotment_manager_id`)
    REFERENCES `allotmentdb`.`allotment_manager` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_allotment_manager_contact_contact_type`
    FOREIGN KEY (`contact_type`)
    REFERENCES `allotmentdb`.`contact_type` (`contact_type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_allotment_manager_contact` ON `allotmentdb`.`allotment_manager_contact` (`allotment_manager_id` ASC);

CREATE INDEX `fk_allotment_manager_contact_contact_type` ON `allotmentdb`.`allotment_manager_contact` (`contact_type` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`user` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(60) NOT NULL,
  `last_name` VARCHAR(60) NOT NULL,
  `username` VARCHAR(60) NOT NULL,
  `password_hash` VARCHAR(100) NOT NULL,
  `password_reset_token` VARCHAR(200) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `status` INT(3) UNSIGNED NOT NULL DEFAULT 0,
  `auth_key` VARCHAR(100) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `allotmentdb`.`allotment_owner_person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`allotment_owner_person` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`allotment_owner_person` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `allotment_owner_id` INT UNSIGNED NOT NULL,
  `title` VARCHAR(20) NOT NULL,
  `first_name` VARCHAR(60) NOT NULL,
  `last_name` VARCHAR(60) NOT NULL,
  `role` VARCHAR(60) NULL DEFAULT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_allotment_contact_allotment_owner`
    FOREIGN KEY (`allotment_owner_id`)
    REFERENCES `allotmentdb`.`allotment_owner` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_allotment_contact_allotment_owner` ON `allotmentdb`.`allotment_owner_person` (`allotment_owner_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`allotment_owner_contact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`allotment_owner_contact` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`allotment_owner_contact` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `allotment_owner_person_id` INT UNSIGNED NOT NULL,
  `contact_type` VARCHAR(50) NOT NULL,
  `detail` VARCHAR(150) NOT NULL,
  `date_contact_from` DATE NOT NULL,
  `date_contact_to` DATE NULL DEFAULT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_allotment_owner_contact_allotment_owner_person`
    FOREIGN KEY (`allotment_owner_person_id`)
    REFERENCES `allotmentdb`.`allotment_owner_person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_allotment_owner_contact_contact_type`
    FOREIGN KEY (`contact_type`)
    REFERENCES `allotmentdb`.`contact_type` (`contact_type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_allotment_owner_contact_allotment_owner_person` ON `allotmentdb`.`allotment_owner_contact` (`allotment_owner_person_id` ASC);

CREATE INDEX `fk_allotment_owner_contact_contact_type` ON `allotmentdb`.`allotment_owner_contact` (`contact_type` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`customer_contact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`customer_contact` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`customer_contact` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customer_id` INT NOT NULL,
  `contact_type` VARCHAR(60) NOT NULL,
  `detail` VARCHAR(150) NOT NULL,
  `date_contact_from` DATE NOT NULL,
  `date_contact_to` DATE NULL DEFAULT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `chnage_reason` VARCHAR(200) NOT NULL DEFAULT 'new',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customer_contact_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `allotmentdb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_contact_contact_type`
    FOREIGN KEY (`contact_type`)
    REFERENCES `allotmentdb`.`contact_type` (`contact_type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;

CREATE INDEX `fk_customer_contact_customer` ON `allotmentdb`.`customer_contact` (`customer_id` ASC);

CREATE INDEX `fk_customer_contact_contact_type` ON `allotmentdb`.`customer_contact` (`contact_type` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`addressee_title`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`addressee_title` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`addressee_title` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(20) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `allotmentdb`.`base_table`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`base_table` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`base_table` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci;


-- -----------------------------------------------------
-- Table `allotmentdb`.`plot_rent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`plot_rent` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`plot_rent` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `plot_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `amount_of_payment` DOUBLE(6,2) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Payment received',
  `date_due` DATE NOT NULL COMMENT 'Annual renewal date or start date',
  `date_of_payment` DATE NOT NULL,
  `concession` VARCHAR(60) NULL DEFAULT 'Nil',
  `concession_rate` INT(3) UNSIGNED NULL DEFAULT 0 COMMENT 'Percentage reduction, if any',
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_plot_rent_plot`
    FOREIGN KEY (`plot_id`)
    REFERENCES `allotmentdb`.`plot` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_plot_rent_plot` ON `allotmentdb`.`plot_rent` (`plot_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`waiting_list`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`waiting_list` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`waiting_list` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customer_id` INT UNSIGNED NOT NULL,
  `allotment_id` INT UNSIGNED NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL,
  `updated_at` INT(11) UNSIGNED NOT NULL,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `allotmentdb`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`user_role` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`user_role` (
  `id`  NOT NULL,
  `user_id` INT NULL,
  `username` VARCHAR(60) NULL,
  `grant_allotment_site_manager` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'allotment site manager can edit specified site',
  `grant_allotment_site_view` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'allotment site manager can view, specified site',
  `grant_owner_view` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'allotment site owner can view, all sites in domain and admin',
  `grant_owner_edit` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'allotment site owner can edit all sites in domain and admin',
  `grant_expires` DATE NOT NULL COMMENT 'date all grants expire',
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) NOT NULL DEFAULT 0,
  `updated_at` INT(11) NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
COMMENT = '	';


-- -----------------------------------------------------
-- Table `allotmentdb`.`ref_address_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`ref_address_type` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`ref_address_type` (
  `id`  NOT NULL,
  `address_type_code` VARCHAR(60) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `allotmentdb`.`ref_address_title`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`ref_address_title` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`ref_address_title` (
  `id`  NOT NULL,
  `address_title` VARCHAR(60) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `allotmentdb`.`ref_address_county`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`ref_address_county` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`ref_address_county` (
  `id`  NOT NULL,
  `address_county` VARCHAR(60) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `allotmentdb`.`ref_address_country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`ref_address_country` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`ref_address_country` (
  `id`  NOT NULL,
  `country_code_iso` VARCHAR(3) NULL,
  `address_country` VARCHAR(60) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `allotmentdb`.`payments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`payments` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`payments` (
  `id`  NOT NULL,
  `customer_id` INT NOT NULL,
  `date_of_payment` DATE NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `allotmentdb`.`gate_key_register`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`gate_key_register` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`gate_key_register` (
  `id` INT UNSIGNED NOT NULL,
  `key_number` VARCHAR(20) NOT NULL,
  `issued_to_tenant` INT UNSIGNED NOT NULL,
  `issued_date` DATE NOT NULL,
  `returned_date` DATE NULL,
  `charge_money` DECIMAL(5,2) NULL,
  `refund_money` DECIMAL(5,2) NULL,
  `refund_date` DATE NULL,
  `reason_refund` VARCHAR(250) NULL,
  `reason_no_refund` VARCHAR(250) NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_customer_contact_customer`
    FOREIGN KEY (`issued_to_tenant`)
    REFERENCES `allotmentdb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_customer_contact_customer_idx` ON `allotmentdb`.`gate_key_register` (`issued_to_tenant` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`shed_greenhouse_asset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`shed_greenhouse_asset` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`shed_greenhouse_asset` (
  `id` INT UNSIGNED NOT NULL,
  `allotment_id` INT UNSIGNED NOT NULL,
  `location` VARCHAR(250) NOT NULL,
  `purchase_date` DATE NULL,
  `asset_cost` DECIMAL(6,2) NOT NULL DEFAULT 0,
  `annual_rent_value` DECIMAL(5,2) NULL,
  `description` VARCHAR(250) NULL,
  `condition` VARCHAR(250) NULL,
  `condition_review_date` DATE NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_allotment_id`
    FOREIGN KEY (`allotment_id`)
    REFERENCES `allotmentdb`.`allotment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_allotment_id_idx` ON `allotmentdb`.`shed_greenhouse_asset` (`allotment_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`shed_greenhouse_rent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`shed_greenhouse_rent` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`shed_greenhouse_rent` (
  `id` INT UNSIGNED NOT NULL,
  `asset_id` INT UNSIGNED NOT NULL,
  `tenant_id` INT UNSIGNED NOT NULL,
  `rental_start_date` DATE NULL,
  `rental_end_date` DATE NULL,
  `rental_money` DECIMAL(5,2) NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_asset_id`
    FOREIGN KEY (`asset_id`)
    REFERENCES `allotmentdb`.`shed_greenhouse_asset` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_contact_customer`
    FOREIGN KEY (`tenant_id`)
    REFERENCES `allotmentdb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_customer_contact_customer_idx` ON `allotmentdb`.`shed_greenhouse_rent` (`tenant_id` ASC);

CREATE INDEX `fk_asset_id_idx` ON `allotmentdb`.`shed_greenhouse_rent` (`asset_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`shed_greenhouse_maintenance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`shed_greenhouse_maintenance` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`shed_greenhouse_maintenance` (
  `id` INT UNSIGNED NOT NULL,
  `asset_id` INT UNSIGNED NOT NULL,
  `repair_cost` DECIMAL(6,2) NOT NULL,
  `repair_date` DATE NOT NULL,
  `description` VARCHAR(250) NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_asset_id`
    FOREIGN KEY (`asset_id`)
    REFERENCES `allotmentdb`.`shed_greenhouse_asset` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE INDEX `fk_asset_id_idx` ON `allotmentdb`.`shed_greenhouse_maintenance` (`asset_id` ASC);


-- -----------------------------------------------------
-- Table `allotmentdb`.`base_template`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`base_template` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`base_template` (
  `id` INT UNIQUE UNSIGNED NOT NULL AUTO_INCREMENT,
  `some_title` VARCHAR(60) NOT NULL,
  `some_day` DATE NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `change_reason` VARCHAR(200) NOT NULL DEFAULT new,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `allotmentdb`.`base_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `allotmentdb`.`base_history` ;

CREATE TABLE IF NOT EXISTS `allotmentdb`.`base_history` (
  `id` INT UNIQUE UNSIGNED NOT NULL AUTO_INCREMENT,
  `action` VARCHAR(10) NOT NULL,
  `action_at` INT(11) UNSIGNED NOT NULL,
  `created_by` VARCHAR(60) NOT NULL,
  `updated_by` VARCHAR(60) NOT NULL,
  `created_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `updated_at` INT(11) UNSIGNED NOT NULL DEFAULT 0,
  `soft_delete` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0,
  `change_reason` VARCHAR(200) NOT NULL DEFAULT new,
  `origin_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
